import os
import pandas as pd 
import datasets
from glob import glob
import zipfile

class annotated_aoc(datasets.GeneratorBasedBuilder):
	def _info(self):
		return datasets.DatasetInfo(features=datasets.Features({'HIT_info':datasets.Value('string'),'HIT-ID':datasets.Value('string'),'AID':datasets.Value('string'),'AssignmentID':datasets.Value('string'),'HITStatus':datasets.Value('string'),'WorkerIP':datasets.Value('string'),'WorkerCountry':datasets.Value('string'),'WorkerCity':datasets.Value('string'),'country_live':datasets.Value('string'),'native_arabic':datasets.Value('string'),'native_dialect':datasets.Value('string'),'years_speaking':datasets.Value('string'),'StartTime_str':datasets.Value('string'),'EndTime_str':datasets.Value('string'),'WorkTime':datasets.Value('string'),'comment':datasets.Value('string'),'Sentence1':datasets.Value('string'),'DClass1':datasets.Value('string'),'DLevel1':datasets.Value('string'),'source1':datasets.Value('string'),'document1':datasets.Value('string'),'part1':datasets.Value('string'),'segment1':datasets.Value('string'),'Sentence2':datasets.Value('string'),'DClass2':datasets.Value('string'),'DLevel2':datasets.Value('string'),'source2':datasets.Value('string'),'document2':datasets.Value('string'),'part2':datasets.Value('string'),'segment2':datasets.Value('string'),'Sentence3':datasets.Value('string'),'DClass3':datasets.Value('string'),'DLevel3':datasets.Value('string'),'source3':datasets.Value('string'),'document3':datasets.Value('string'),'part3':datasets.Value('string'),'segment3':datasets.Value('string'),'Sentence4':datasets.Value('string'),'DClass4':datasets.Value('string'),'DLevel4':datasets.Value('string'),'source4':datasets.Value('string'),'document4':datasets.Value('string'),'part4':datasets.Value('string'),'segment4':datasets.Value('string'),'Sentence5':datasets.Value('string'),'DClass5':datasets.Value('string'),'DLevel5':datasets.Value('string'),'source5':datasets.Value('string'),'document5':datasets.Value('string'),'part5':datasets.Value('string'),'segment5':datasets.Value('string'),'Sentence6':datasets.Value('string'),'DClass6':datasets.Value('string'),'DLevel6':datasets.Value('string'),'source6':datasets.Value('string'),'document6':datasets.Value('string'),'part6':datasets.Value('string'),'segment6':datasets.Value('string'),'Sentence7':datasets.Value('string'),'DClass7':datasets.Value('string'),'DLevel7':datasets.Value('string'),'source7':datasets.Value('string'),'document7':datasets.Value('string'),'part7':datasets.Value('string'),'segment7':datasets.Value('string'),'Sentence8':datasets.Value('string'),'DClass8':datasets.Value('string'),'DLevel8':datasets.Value('string'),'source8':datasets.Value('string'),'document8':datasets.Value('string'),'part8':datasets.Value('string'),'segment8':datasets.Value('string'),'Sentence9':datasets.Value('string'),'DClass9':datasets.Value('string'),'DLevel9':datasets.Value('string'),'source9':datasets.Value('string'),'document9':datasets.Value('string'),'part9':datasets.Value('string'),'segment9':datasets.Value('string'),'Sentence10':datasets.Value('string'),'DClass10':datasets.Value('string'),'DLevel10':datasets.Value('string'),'source10':datasets.Value('string'),'document10':datasets.Value('string'),'part10':datasets.Value('string'),'segment10':datasets.Value('string'),'Sentence11':datasets.Value('string'),'DClass11':datasets.Value('string'),'DLevel11':datasets.Value('string'),'source11':datasets.Value('string'),'document11':datasets.Value('string'),'part11':datasets.Value('string'),'segment11':datasets.Value('string'),'Sentence12':datasets.Value('string'),'DClass12':datasets.Value('string'),'DLevel12':datasets.Value('string'),'source12':datasets.Value('string'),'document12':datasets.Value('string'),'part12':datasets.Value('string'),'segment12':datasets.Value('string')}))

	def extract_all(self, dir):
		zip_files = glob(dir+'/**/**.zip', recursive=True)
		for file in zip_files:
			with zipfile.ZipFile(file) as item:
				item.extractall('/'.join(file.split('/')[:-1])) 


	def get_all_files(self, dir):
		files = []
		valid_file_ext = ['txt', 'csv', 'tsv', 'xlsx', 'xls', 'xml', 'json', 'jsonl', 'html', 'wav', 'mp3', 'jpg', 'png']
		for ext in valid_file_ext:
			files += glob(f"{dir}/**/**.{ext}", recursive = True)
		return files

	def _split_generators(self, dl_manager):
		url = ['https://raw.githubusercontent.com/sjeblee/AOC/master/stuff-from-omar/annotated-aoc-data/dialectid_data.tsv']
		downloaded_files = dl_manager.download_and_extract(url)
		return [datasets.SplitGenerator(name=datasets.Split.TRAIN, gen_kwargs={'filepaths': {'inputs':downloaded_files} })]


	def _generate_examples(self, filepaths):
		_id = 0
		for i,filepath in enumerate(filepaths['inputs']):
			df = pd.read_csv(filepath, sep = r'\t', skiprows = 0, error_bad_lines = False, header = 0, engine = 'python')
			if len(df.columns) != 100:
				continue
			df = df[['HIT_info', 'HIT-ID', 'AID', 'AssignmentID', 'HITStatus', 'WorkerIP', 'WorkerCountry', 'WorkerCity', 'country_live', 'native_arabic', 'native_dialect', 'years_speaking', 'StartTime_str', 'EndTime_str', 'WorkTime', 'comment', 'Sentence1', 'DClass1', 'DLevel1', 'source1', 'document1', 'part1', 'segment1', 'Sentence2', 'DClass2', 'DLevel2', 'source2', 'document2', 'part2', 'segment2', 'Sentence3', 'DClass3', 'DLevel3', 'source3', 'document3', 'part3', 'segment3', 'Sentence4', 'DClass4', 'DLevel4', 'source4', 'document4', 'part4', 'segment4', 'Sentence5', 'DClass5', 'DLevel5', 'source5', 'document5', 'part5', 'segment5', 'Sentence6', 'DClass6', 'DLevel6', 'source6', 'document6', 'part6', 'segment6', 'Sentence7', 'DClass7', 'DLevel7', 'source7', 'document7', 'part7', 'segment7', 'Sentence8', 'DClass8', 'DLevel8', 'source8', 'document8', 'part8', 'segment8', 'Sentence9', 'DClass9', 'DLevel9', 'source9', 'document9', 'part9', 'segment9', 'Sentence10', 'DClass10', 'DLevel10', 'source10', 'document10', 'part10', 'segment10', 'Sentence11', 'DClass11', 'DLevel11', 'source11', 'document11', 'part11', 'segment11', 'Sentence12', 'DClass12', 'DLevel12', 'source12', 'document12', 'part12', 'segment12']]
			for _, record in df.iterrows():
				yield str(_id), {'HIT_info':record['HIT_info'],'HIT-ID':record['HIT-ID'],'AID':record['AID'],'AssignmentID':record['AssignmentID'],'HITStatus':record['HITStatus'],'WorkerIP':record['WorkerIP'],'WorkerCountry':record['WorkerCountry'],'WorkerCity':record['WorkerCity'],'country_live':record['country_live'],'native_arabic':record['native_arabic'],'native_dialect':record['native_dialect'],'years_speaking':record['years_speaking'],'StartTime_str':record['StartTime_str'],'EndTime_str':record['EndTime_str'],'WorkTime':record['WorkTime'],'comment':record['comment'],'Sentence1':record['Sentence1'],'DClass1':record['DClass1'],'DLevel1':record['DLevel1'],'source1':record['source1'],'document1':record['document1'],'part1':record['part1'],'segment1':record['segment1'],'Sentence2':record['Sentence2'],'DClass2':record['DClass2'],'DLevel2':record['DLevel2'],'source2':record['source2'],'document2':record['document2'],'part2':record['part2'],'segment2':record['segment2'],'Sentence3':record['Sentence3'],'DClass3':record['DClass3'],'DLevel3':record['DLevel3'],'source3':record['source3'],'document3':record['document3'],'part3':record['part3'],'segment3':record['segment3'],'Sentence4':record['Sentence4'],'DClass4':record['DClass4'],'DLevel4':record['DLevel4'],'source4':record['source4'],'document4':record['document4'],'part4':record['part4'],'segment4':record['segment4'],'Sentence5':record['Sentence5'],'DClass5':record['DClass5'],'DLevel5':record['DLevel5'],'source5':record['source5'],'document5':record['document5'],'part5':record['part5'],'segment5':record['segment5'],'Sentence6':record['Sentence6'],'DClass6':record['DClass6'],'DLevel6':record['DLevel6'],'source6':record['source6'],'document6':record['document6'],'part6':record['part6'],'segment6':record['segment6'],'Sentence7':record['Sentence7'],'DClass7':record['DClass7'],'DLevel7':record['DLevel7'],'source7':record['source7'],'document7':record['document7'],'part7':record['part7'],'segment7':record['segment7'],'Sentence8':record['Sentence8'],'DClass8':record['DClass8'],'DLevel8':record['DLevel8'],'source8':record['source8'],'document8':record['document8'],'part8':record['part8'],'segment8':record['segment8'],'Sentence9':record['Sentence9'],'DClass9':record['DClass9'],'DLevel9':record['DLevel9'],'source9':record['source9'],'document9':record['document9'],'part9':record['part9'],'segment9':record['segment9'],'Sentence10':record['Sentence10'],'DClass10':record['DClass10'],'DLevel10':record['DLevel10'],'source10':record['source10'],'document10':record['document10'],'part10':record['part10'],'segment10':record['segment10'],'Sentence11':record['Sentence11'],'DClass11':record['DClass11'],'DLevel11':record['DLevel11'],'source11':record['source11'],'document11':record['document11'],'part11':record['part11'],'segment11':record['segment11'],'Sentence12':record['Sentence12'],'DClass12':record['DClass12'],'DLevel12':record['DLevel12'],'source12':record['source12'],'document12':record['document12'],'part12':record['part12'],'segment12':record['segment12']}
				_id += 1 

